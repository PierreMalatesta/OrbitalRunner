### YamlMime:ManagedReference
items:
- uid: Global.CheckGround
  commentId: T:Global.CheckGround
  id: CheckGround
  parent: Global
  children:
  - Global.CheckGround.DistanceGround
  - Global.CheckGround.isGrounded
  langs:
  - csharp
  - vb
  name: CheckGround
  nameWithType: CheckGround
  fullName: CheckGround
  type: Class
  source:
    id: CheckGround
    path: ''
    startLine: 8
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nChecks the ground of player, if true then player is in air and is unable to jump again, if false then player is on ground\n"
  example: []
  syntax:
    content: 'public class CheckGround : MonoBehaviour'
    content.vb: >-
      Public Class CheckGround
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.CheckGround.DistanceGround
  commentId: F:Global.CheckGround.DistanceGround
  id: DistanceGround
  parent: Global.CheckGround
  langs:
  - csharp
  - vb
  name: DistanceGround
  nameWithType: CheckGround.DistanceGround
  fullName: CheckGround.DistanceGround
  type: Field
  source:
    id: DistanceGround
    path: ''
    startLine: 10
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public float DistanceGround
    return:
      type: System.Single
    content.vb: Public DistanceGround As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.CheckGround.isGrounded
  commentId: F:Global.CheckGround.isGrounded
  id: isGrounded
  parent: Global.CheckGround
  langs:
  - csharp
  - vb
  name: isGrounded
  nameWithType: CheckGround.isGrounded
  fullName: CheckGround.isGrounded
  type: Field
  source:
    id: isGrounded
    path: ''
    startLine: 12
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public bool isGrounded
    return:
      type: System.Boolean
    content.vb: Public isGrounded As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
